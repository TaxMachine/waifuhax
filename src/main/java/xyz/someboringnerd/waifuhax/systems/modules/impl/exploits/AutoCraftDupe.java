package xyz.someboringnerd.waifuhax.systems.modules.impl.exploits;

import meteordevelopment.orbit.EventHandler;
import net.minecraft.client.gui.screen.ingame.InventoryScreen;
import net.minecraft.client.gui.screen.recipebook.RecipeResultCollection;
import net.minecraft.client.recipebook.ClientRecipeBook;
import net.minecraft.client.recipebook.RecipeBookGroup;
import net.minecraft.item.Items;
import net.minecraft.recipe.RecipeEntry;
import net.minecraft.recipe.book.RecipeBookCategory;
import xyz.someboringnerd.waifuhax.events.TickEvent;
import xyz.someboringnerd.waifuhax.managers.LogManager;
import xyz.someboringnerd.waifuhax.settings.BooleanSetting;
import xyz.someboringnerd.waifuhax.systems.modules.AbstractModule;
import xyz.someboringnerd.waifuhax.systems.modules.CATEGORY;
import xyz.someboringnerd.waifuhax.systems.modules.annotations.AutoDisable;

import java.util.List;

@AutoDisable
public class AutoCraftDupe extends AbstractModule {

    private boolean dropped = false, takeLast = false;

    private int tick = 0;

    public BooleanSetting stopOnFullInventory = new BooleanSetting("Stop on full inventory", "Stop when inventory is full", true);

    public AutoCraftDupe() {
        super(CATEGORY.EXPLOITS);
    }

    @Override
    public void onActivate(boolean live) {
        super.onActivate(live);
        if (mc.player == null) return;

        dropped = false;
        tick = 0;

        mc.setScreen(new InventoryScreen(mc.player));
        player.getRecipeBook().setCategoryOptions(RecipeBookCategory.CRAFTING, true, true);
        mc.setScreen(null);
    }

    @EventHandler
    public void onTick(TickEvent e) {
        if (!dropped) {
            if (stopOnFullInventory.getValue() && player.getInventory().getEmptySlot() == -1) {
                toggle();
                LogManager.printToChat("Inventory full, stopping");
                player.closeHandledScreen();
                return;
            }
            player.dropSelectedItem(true);
            dropped = true;
            return;
        }

        if (tick == 9) {
            mc.setScreen(new InventoryScreen(mc.player));
        }

        if (tick == 10) {
            if (mc.currentScreen instanceof InventoryScreen) {
                ClientRecipeBook cRecipeBook = player.getRecipeBook();
                List<RecipeResultCollection> list = cRecipeBook.getResultsForGroup(RecipeBookGroup.CRAFTING_SEARCH);
                RecipeEntry<?> recipe = null;

                loop:
                for (RecipeResultCollection collection : list) {
                    for (RecipeEntry<?> _recipe : collection.getRecipes(true)) {
                        if (takeLast) {
                            if (_recipe.value().createIcon().getItem().equals(Items.OAK_BUTTON)) {
                                recipe = _recipe;
                                takeLast = false;
                                break loop;
                            }
                        } else {
                            if (_recipe.value().createIcon().getItem().equals(Items.OAK_PRESSURE_PLATE)) {
                                recipe = _recipe;
                                takeLast = true;
                                break loop;
                            }
                        }
                    }
                }

                if (recipe == null) {
                    LogManager.printToChat("Something must have went really wrong, disabling the module");
                    toggle();
                    return;
                }

                mc.interactionManager.clickRecipe(player.currentScreenHandler.syncId, recipe, false);
            }
        }

        if (tick >= 40) {
            tick = 0;
            dropped = false;
        }

        tick++;
    }

    @Override
    public String getDescription() {
        return "Perform the crafting dupe for you";
    }
}
