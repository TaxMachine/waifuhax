plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id "com.github.johnrengelman.shadow" version "7.1.2"
}

base {
	archivesName = project.archives_base_name
}

version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org/releases"
	}
	maven { url 'https://jitpack.io'}
	maven { url "https://libraries.minecraft.net"}

	flatDir {
		dirs "$rootProject.projectDir/libs"
	}
}

ext {
	lwjglVersion = '3.3.1'
	imguiVersion = '1.86.8'
}

configurations {
	implementation.extendsFrom(library)
	shadow.extendsFrom(library)
}

loom {
	accessWidenerPath = file("src/main/resources/waihuhax.accesswidener")
	mods {
		"waifuhax" {
			sourceSet("main")
		}
	}
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	library 'org.json:json:20231013'
	library "meteordevelopment:orbit:0.2.3"
	library 'org.reflections:reflections:0.10.2'
	library 'org.luaj:luaj-jse:3.0.1'
	library 'com.mojang:brigadier:1.0.18'
	library fileTree('libs')

	annotationProcessor 'org.projectlombok:lombok:1.18.34'
	implementation 'org.projectlombok:lombok:1.18.34'


	implementation("io.github.spair:imgui-java-binding:$imguiVersion")
	include("io.github.spair:imgui-java-binding:$imguiVersion")
	implementation("io.github.spair:imgui-java-lwjgl3:$imguiVersion") {
		exclude group: "org.lwjgl"
	}
	include("io.github.spair:imgui-java-lwjgl3:$imguiVersion")
	["linux", "macos", "windows"].each {
		implementation("io.github.spair:imgui-java-natives-$it:$imguiVersion")
		include("io.github.spair:imgui-java-natives-$it:$imguiVersion")
	}
}

processResources {
	inputs.property "version", getGitHash()
	inputs.property "minecraft_version", project.minecraft_version
	inputs.property "loader_version", project.loader_version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": getGitHash(),
			"minecraft_version": project.minecraft_version,
			"loader_version": project.loader_version
	}
}


static String getGitHash() {
	// git hash
	long start = System.currentTimeMillis();
	def hash = Runtime.getRuntime().exec("git rev-parse --short HEAD")
	def branch = Runtime.getRuntime().exec("git rev-parse --abbrev-ref HEAD")

	def h_result = hash.waitFor()
	if (h_result != 0) {
		return "3.0.0"
	}

	def b_result = branch.waitFor()
	if (b_result != 0) {
		return "main-3.0.0"
	}

	String gitCommitHash = hash.inputStream.text.trim()
	String gitCommitBranch = branch.inputStream.text.trim()

	long finish = System.currentTimeMillis();

	if(gitCommitBranch == "main") {
		return gitCommitHash
	}

	return gitCommitBranch + "-" + gitCommitHash
}

shadowJar {
	configurations = [ project.configurations.shadow ]

	dependencies {
		exclude {
			it.moduleGroup == "org.slf4j"
		}
	}
}

remapJar {
	dependsOn shadowJar
	inputFile.set(shadowJar.archiveFile)
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 21
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

tasks.register('Build and run', Exec) {

	commandLine './scripts/run.sh'
}
